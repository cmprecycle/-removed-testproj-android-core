<!doctype html>
<html>
<head>
    <meta http-equiv="Content-type" content="text/html; charset=utf-8">
    <meta charset="UTF-8">
    <!--<meta name="viewport" content="width=device-width,initial-scale=1.0"/>-->
    <meta name="viewport" content="initial-scale=1.0"/>
    <meta name="format-detection" content="telephone=no,email=no"/>
    <meta name="apple-mobile-web-app-capable" content="yes"/>
    <meta name="apple-mobile-web-app-status-bar-style" content="black"/>
</head>
<body>
<div id='loading'>
    <table width="100%" height="100%" border="3">
        <tr height="30%">
            <td align="center" valign="bottom">
                <!--
                <a href="javascript:alert('test alert');">alert</a>
                <a href="javascript:alert(typeof AndroidWebView);">typeof AndroidWebView</a>
                <a href
                ="javascript:alert(AndroidWebView._send('testcmd','testid','testparam'));"
                >_AndroidWebView._send</a>
                <a href
                           ="javascript:alert(AndroidWebView._send);"
                        >alert AndroidWebView._send</a>-->
                <a href="javascript:alert('content');">alert</a><br/>
                <a href="javascript:test_app_activity_open_1();">Test _app_activity_open
                    (topbar:Y)</a>&nbsp;&nbsp;&nbsp;&nbsp;<br/>
                <a href="javascript:test_app_activity_open_2();">Test _app_activity_open
                    (topbar:N)</a>&nbsp;&nbsp;&nbsp;&nbsp;<br/>
                <a href="javascript:alert(JsBridgeHybrid_.js2jv('iii','kkk','ppp'));">JsBridgeHybrid_._js2jv(iii,kkk,ppp)</a>
                <a href="javascript:alert(JsBridgeHybrid_.jv2js_cb('iii','rrr'));">JsBridgeHybrid_.jv2js_cb(iii,kkk)</a>
                &nbsp;&nbsp;&nbsp;&nbsp;

                <script>
function s2o(strJson){ try{ var myjson=null; return (new Function('return '+strJson))(); }catch(ex){} };
function o2s(object){
if(null==object)return "null";

var type = typeof object;

if('object'== type){
if (Array == object.constructor) type = 'array';
else if (RegExp == object.constructor) type = 'regexp';
else type = 'object';
}
switch(type){
case 'undefined':
case 'unknown':
return; break;//return undefined
case 'function':
case 'boolean':
case 'regexp':
return object.toString(); break;
case 'number':
return isFinite(object) ? object.toString() : 'null'; break;
case 'string':
return '"' + object.replace(/(\\|\")/g,"\\$1").replace(/\n|\r|\t/g, function(){ var a = arguments[0]; return (a == '\n') ? '\\n': (a == '\r') ? '\\r': (a == '\t') ? '\\t': "" }) + '"'; break;
case 'object':
var pp="";var value ="";
var results = [];
try{
for (var property in object)
{
pp=object[property];
value = o2s(pp);
if (value !== undefined)
results.push('"'+property + '":' + value);
};
}
catch(e){ }
return '{' + results.join(',') + '}';
break;
case 'array':
var results = [];
if(object.length>=0){
for(var i = 0; i < object.length; i++){
var value = o2s(object[i]);
if (value !== undefined)
results.push(value);
};
return '[' + results.join(',') + ']';
}
else{
for(k in object) {
var kk=k; var value = o2s(object[k]);
if (value !== undefined)
results.push('"'+kk+'":'+value);
}
return '{' + results.join(',') + '}';
}
break;
}
};

window.isRootLoaded=true;
window.cmpjsbridge=new (function(){
this.browser = {
versions: function() {
var u = navigator.userAgent, app = navigator.appVersion;
return {
android: u.indexOf('Android') > -1,
iphone: u.indexOf('iPhone') > -1,
ipad: u.indexOf('iPad') > -1,
webApp: u.indexOf('Safari') == -1
};
}()
};
var app_type='Desktop';
var _browser=this.browser;
if (_browser.versions.iphone) app_type='iOS';
if (_browser.versions.ipad) app_type='iOS';
if (_browser.versions.android) app_type='Android';
this.app_type=app_type;

//iOS JS-BRIDGE
this.ios_js_bridge=function(callback) {
if (window.WebViewJavascriptBridge) { return callback(WebViewJavascriptBridge); }
if (window.WVJBCallbacks) { return window.WVJBCallbacks.push(callback); }
window.WVJBCallbacks = [callback];
var WVJBIframe = document.createElement('iframe');
WVJBIframe.style.display = 'none';
WVJBIframe.src = 'wvjbscheme://__BRIDGE_LOADED__';
document.documentElement.appendChild(WVJBIframe);
setTimeout(function() { document.documentElement.removeChild(WVJBIframe) }, 0)
};

//Android JS-BRIDGE
this.android_js_bridge=function(callback){
if (window.WebViewJavascriptBridge) {
callback(WebViewJavascriptBridge)
} else {
document.addEventListener(
'WebViewJavascriptBridgeReady'
, function() {
callback(WebViewJavascriptBridge)
},
false
);
}
};

//Android need a init call...  A Bug to fix!!
if(this.browser.versions.android){
this.android_js_bridge(function(bridge) {
bridge.init(function(message, responseCallback) {
});
});
}

//this.js_bridge=function(callback){
//if(this.bridge.versions.android){
//}
//};

this.callHandler=function(funcname,data,cb){
if(typeof(console)!='undefined'){
console.log(funcname, data, cb);
}
var s="";
s+="<h1>"+data['header']+"</h1>";
s+="<pre style='font-size:13pt;'>"+data['body']+"</pre>";
switch(this.app_type){
case 'Android':
this.android_js_bridge(function(bridge){
bridge.callHandler( funcname, data, function( rt ){
if (typeof(rt)=='string'){
try{ rt=s2o(rt); } catch(ex){};
}
if (cb) cb(rt);
});
});
break;
case 'iOS':
this.ios_js_bridge(function(bridge) {
bridge.callHandler( funcname, data, cb );
})
break;
//default:
//window.open('WapPrint.htm?s='+ escape(o2s(s)));//TODO post the data
}
}//call
});//cmpjsbridge

function test_app_activity_open_1(){
window.cmpjsbridge.callHandler('_app_activity_open', {topbar:'Y',mode:'WebView',address:'http://app.jump.ws/core/apitest.htm?'+Math.random()},function( rt ){
alert(o2s(rt));
});
}
function test_app_activity_open_2(){
window.cmpjsbridge.callHandler('_app_activity_open', {topbar:'N',mode:'WebView',address:'http://app.jump.ws/core/apitest.htm?'+Math.random()},function( rt ){
alert(o2s(rt));
});
}
function test_app_activity_close(){
window.cmpjsbridge.callHandler('_app_activity_close', {},function( rt ){
console.log(rt);
alert(o2s(rt));
});
}

</script>
                <img id="loading_gif" src='root.gif' onclick='location.reload();'/></td>
        </tr>
        <tr height="70%">
            <td align="center" valign="top">
                <div id='stage'></div>
            </td>
        </tr>
    </table>
</div>
<!-- network checking (by api);
try remote launcher
$appid=_app_get_id();//from app packing..

try get remote config file:
http://app.jump.ws/{$appid}/

set a timeout checker...
-->
<script>
	var _appid='core';//tmp.
	//var _u='http://app.jump.ws/'+_appid+'/');//production
	var _u='http://app.jump.ws/'+_appid+'/?'+Math.random();//dev
	window.isRootLoaded=false;
	document.writeln('<script src="'+_u+'">'+'</scr'+'ipt>');
	stage.innerHTML=''+window.location.href+'<br/>Checking Network... ';
	var _tm_check_root = setTimeout(function(){
		if(window.isRootLoaded==false){
			stage.innerHTML='<h2>Network seems down, please check network</h2><input type=button value="Try again" onclick="window.location.reload();"/>';//TODO BETTER UI
			//make a button to reload?
		}
	},15000);

</script>
